CDN:内容分发网络，加速用户获取数据的系统
cdn缓存
redis：每秒10w qbs
秒杀操作优化分析：1.无法使用cdn缓存 2.后端缓存困难：库存问题 3.一行数据竞争：热点商品（产生大量update减库存操作）
方案分析
如果只针对一个商品mysql可以扛住4w qbs
update减库存--> insert购买明细 --> commit rollback
秒杀时间=（后台服务器和数据库之间的网络延迟 + gc时间几十ms + sql执行时间） * n次

事务的commit由web后天客户端控制，增加了网络延迟和gc时间：解决方案：大公司像阿里采用修改数据库如mysql源码方案，在数据库进行
判断库存>=1或者0来进行提交或者回滚。
使用存储过程：整个事务在mysql端完成。

优化总结：
前端控制：按键只能秒杀一次
动静态数据分离：cdn缓存，后端缓存（redis）（使用protostuff序列化方式可以将jvm序列化过程减少到1/10到1/5）
事务竞争优化：减少事务锁时间(改变execute中update和insert顺序，即先插入明细在减库存，这样可以减少rowlock持有时间)
减少网络延时和gc时间：将事务sql在数据库端执行（利用存储过程），否则需要将数据返回，在后台进行判断和commit或者rollback。

ttdl:用来分库分表
